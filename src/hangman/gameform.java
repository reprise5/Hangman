package hangman;

/**
 *
 * @author reprise
 */
public class gameform extends javax.swing.JFrame {

    
    //Creates new form game form
    public gameform() {
        initComponents();
    }
    //=================================Generated=Code================================================
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        hangScreenPanel = new javax.swing.JPanel();
        hangScreen = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        Cbutton = new javax.swing.JButton();
        Bbutton = new javax.swing.JButton();
        Dbutton = new javax.swing.JButton();
        DifficultyLabel = new javax.swing.JLabel();
        DifficultyCombobox = new javax.swing.JComboBox();
        startGameButton = new javax.swing.JButton();
        Ebutton = new javax.swing.JButton();
        Fbutton = new javax.swing.JButton();
        Gbutton = new javax.swing.JButton();
        Ibutton = new javax.swing.JButton();
        Hbutton = new javax.swing.JButton();
        Jbutton = new javax.swing.JButton();
        Sbutton = new javax.swing.JButton();
        Rbutton = new javax.swing.JButton();
        Pbutton = new javax.swing.JButton();
        Qbutton = new javax.swing.JButton();
        Obutton = new javax.swing.JButton();
        Lbutton = new javax.swing.JButton();
        Mbutton = new javax.swing.JButton();
        Nbutton = new javax.swing.JButton();
        triesLeftCountLabel = new javax.swing.JLabel();
        triesLeftScreen = new javax.swing.JTextField();
        Kbutton = new javax.swing.JButton();
        guesserScreen = new javax.swing.JTextField();
        Abutton = new javax.swing.JButton();
        Tbutton = new javax.swing.JButton();
        Ubutton = new javax.swing.JButton();
        Vbutton = new javax.swing.JButton();
        Wbutton = new javax.swing.JButton();
        Xbutton = new javax.swing.JButton();
        Ybutton = new javax.swing.JButton();
        Zbutton = new javax.swing.JButton();
        GuessWordBox = new javax.swing.JTextField();
        GuessEnterButton = new javax.swing.JButton();
        GuessthewordLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Hangman");
        setResizable(false);

        hangScreenPanel.setLayout(null);

        hangScreen.setIcon(new javax.swing.ImageIcon("/home/reprise/Dropbox/Programming/01 Java/Hangman/hangImg/post.png")); // NOI18N
        hangScreen.setAutoscrolls(true);
        hangScreen.setFocusable(false);
        hangScreenPanel.add(hangScreen);
        hangScreen.setBounds(10, -20, 270, 310);
        hangScreen.getAccessibleContext().setAccessibleName("IMAGE");

        Cbutton.setText("C");
        Cbutton.setToolTipText("");

        Bbutton.setText("B");
        Bbutton.setToolTipText("");

        Dbutton.setText("D");
        Dbutton.setToolTipText("");

        DifficultyLabel.setText("Difficulty:");

        DifficultyCombobox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Easy", "Medium", "Hard" }));

        startGameButton.setText("START GAME");
        startGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startGameButtonActionPerformed(evt);
            }
        });

        Ebutton.setText("E");
        Ebutton.setToolTipText("");

        Fbutton.setText("F");
        Fbutton.setToolTipText("");

        Gbutton.setText("G");
        Gbutton.setToolTipText("");

        Ibutton.setText("I");
        Ibutton.setToolTipText("");

        Hbutton.setText("H");
        Hbutton.setToolTipText("");

        Jbutton.setText("J");
        Jbutton.setToolTipText("");

        Sbutton.setToolTipText("");
        Sbutton.setLabel("S");

        Rbutton.setToolTipText("");
        Rbutton.setLabel("R");

        Pbutton.setToolTipText("");
        Pbutton.setLabel("P");

        Qbutton.setText("Q");
        Qbutton.setToolTipText("");

        Obutton.setToolTipText("");
        Obutton.setLabel("O");

        Lbutton.setText("L");
        Lbutton.setToolTipText("");

        Mbutton.setToolTipText("");
        Mbutton.setLabel("M");

        Nbutton.setToolTipText("");
        Nbutton.setLabel("N");

        triesLeftCountLabel.setText("Tries Left:");

        triesLeftScreen.setEditable(false);
        triesLeftScreen.setFont(new java.awt.Font("Digital Readout Thick Upright", 0, 24)); // NOI18N
        triesLeftScreen.setFocusable(false);

        Kbutton.setText("K");
        Kbutton.setToolTipText("");

        guesserScreen.setEditable(false);
        guesserScreen.setBackground(new java.awt.Color(153, 255, 255));
        guesserScreen.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        guesserScreen.setToolTipText("This is the word you need to guess.");
        guesserScreen.setFocusable(false);
        guesserScreen.setName(""); // NOI18N
        guesserScreen.setRequestFocusEnabled(false);

        Abutton.setText("A");
        Abutton.setToolTipText("");
        Abutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AbuttonActionPerformed(evt);
            }
        });

        Tbutton.setToolTipText("");
        Tbutton.setLabel("T");

        Ubutton.setToolTipText("");
        Ubutton.setLabel("U");

        Vbutton.setToolTipText("");
        Vbutton.setLabel("V");

        Wbutton.setToolTipText("");
        Wbutton.setLabel("W");

        Xbutton.setToolTipText("");
        Xbutton.setLabel("X");

        Ybutton.setToolTipText("");
        Ybutton.setLabel("Y");

        Zbutton.setToolTipText("");
        Zbutton.setLabel("Z");

        GuessWordBox.setBackground(new java.awt.Color(255, 255, 204));
        GuessWordBox.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        GuessEnterButton.setText("Enter");

        GuessthewordLabel.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        GuessthewordLabel.setText("Guess the word:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(hangScreenPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(triesLeftCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(triesLeftScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(DifficultyLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(DifficultyCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(startGameButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(guesserScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(GuessthewordLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(GuessWordBox, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(GuessEnterButton)))
                        .addGap(5, 51, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 710, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(158, 158, 158)
                        .addComponent(Abutton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Bbutton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Cbutton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Dbutton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Ebutton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Fbutton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Gbutton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Hbutton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Ibutton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Jbutton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(181, 181, 181)
                        .addComponent(Kbutton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Tbutton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Ubutton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Vbutton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Wbutton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Xbutton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Ybutton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Zbutton))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Lbutton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Mbutton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Nbutton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Obutton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Pbutton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Qbutton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Rbutton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Sbutton)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(hangScreenPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DifficultyLabel)
                            .addComponent(DifficultyCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(triesLeftCountLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(startGameButton)
                            .addComponent(triesLeftScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(guesserScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(GuessEnterButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(GuessWordBox, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                                .addComponent(GuessthewordLabel)))
                        .addGap(30, 30, 30)))
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Cbutton)
                    .addComponent(Bbutton)
                    .addComponent(Dbutton)
                    .addComponent(Ebutton)
                    .addComponent(Fbutton)
                    .addComponent(Gbutton)
                    .addComponent(Hbutton)
                    .addComponent(Ibutton)
                    .addComponent(Jbutton)
                    .addComponent(Abutton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Mbutton)
                    .addComponent(Lbutton)
                    .addComponent(Nbutton)
                    .addComponent(Obutton)
                    .addComponent(Pbutton)
                    .addComponent(Qbutton)
                    .addComponent(Rbutton)
                    .addComponent(Sbutton)
                    .addComponent(Kbutton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Vbutton)
                    .addComponent(Ubutton)
                    .addComponent(Wbutton)
                    .addComponent(Xbutton)
                    .addComponent(Ybutton)
                    .addComponent(Zbutton)
                    .addComponent(Tbutton))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        DifficultyLabel.getAccessibleContext().setAccessibleName("DifficultyLabel");
        Mbutton.getAccessibleContext().setAccessibleName("M");
        triesLeftCountLabel.getAccessibleContext().setAccessibleName(":");

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    //=================================END=Generated=Code=============================================
    
    
    
    
    //...............................START GAME BUTTON!!!!...........................................
    private void startGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startGameButtonActionPerformed
        //First re-enable all of the buttons, they could be disabled.
        Abutton.setEnabled(true);
        Bbutton.setEnabled(true);
        Cbutton.setEnabled(true);
        Dbutton.setEnabled(true);
        Ebutton.setEnabled(true);
        Fbutton.setEnabled(true);
        Gbutton.setEnabled(true);
        Hbutton.setEnabled(true);
        Ibutton.setEnabled(true);
        Jbutton.setEnabled(true);
        Kbutton.setEnabled(true);
        Lbutton.setEnabled(true);
        Mbutton.setEnabled(true);
        Nbutton.setEnabled(true);
        Obutton.setEnabled(true);
        Pbutton.setEnabled(true);
        Qbutton.setEnabled(true);
        Rbutton.setEnabled(true);
        Sbutton.setEnabled(true);
        Tbutton.setEnabled(true);
        Ubutton.setEnabled(true);
        Vbutton.setEnabled(true);
        Wbutton.setEnabled(true);
        Xbutton.setEnabled(true);
        Ybutton.setEnabled(true);
        Zbutton.setEnabled(true);
        GuessEnterButton.setEnabled(true);
        GuessWordBox.setEnabled(true);
        
        //set icon and tries counter            
        hangScreen.setIcon(new javax.swing.ImageIcon("/home/reprise/Dropbox/Programming/01 Java/Hangman/hangImg/post.png"));
        chancesLeftCounter = 6;
        triesLeftScreen.setText("6");
        
        //get user requested difficulty. index 0 is easy, index 1 is medium, index 2 is hard.
        difficulty = DifficultyCombobox.getSelectedIndex();
        System.out.println("difficulty index: " + difficulty );
       
        if (difficulty == 0){
            //easy game started
            wordToGuess = game.doWordBag1();
            System.out.println("Word: " + wordToGuess);
           
            //Draw the underdashes:
            StringBuilder stringBuilder = new StringBuilder();
            wordToGuessLength = wordToGuess.length();
            System.out.println("WordLength:" + wordToGuessLength);

            for (int i = 0; i < wordToGuessLength; i++){
                stringBuilder.append("_ ");
                underscores = stringBuilder.toString();
            }
            
            System.out.println("underscores:" + underscores);
            guesserScreen.setText(underscores);
            guesserScreen.setToolTipText("The word you need to guess has " + wordToGuessLength + " letters.");
        }
        
        else if (difficulty == 1){
            //medium game started
            wordToGuess = game.doWordBag2();
            System.out.println("Word: " + wordToGuess);
            
            //Draw the underdashes:
            StringBuilder stringBuilder = new StringBuilder();
            wordToGuessLength = wordToGuess.length();
            System.out.println("WordLength:" + wordToGuessLength);

            for (int i = 0; i < wordToGuessLength; i++){
                stringBuilder.append("_ ");
                underscores = stringBuilder.toString();
            }
            
            System.out.println("underscores:" + underscores);
            guesserScreen.setText(underscores);
            guesserScreen.setToolTipText("The word you need to guess has " + wordToGuessLength + " letters.");

        }
        
        else if (difficulty == 2){
            //hard game started
            wordToGuess = game.doWordBag3();
            System.out.println("Word: " + wordToGuess);
            
            //Draw the underdashes:
            StringBuilder stringBuilder = new StringBuilder();
            wordToGuessLength = wordToGuess.length();
            System.out.println("WordLength:" + wordToGuessLength);

            for (int i = 0; i < wordToGuessLength; i++){
                stringBuilder.append("_ ");
                underscores = stringBuilder.toString();
            }
            System.out.println("underscores" + underscores);
            guesserScreen.setText(underscores);
            guesserScreen.setToolTipText("The word you need to guess has " + wordToGuessLength + " letters.");
        }   
    }//GEN-LAST:event_startGameButtonActionPerformed

    //A Button Press
    private void AbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AbuttonActionPerformed
        letter = "a";
        
        //check if or not the response is correct.
        correctResponse = game.testLetterResponse(letter);
        if (correctResponse){
            //call the sub that will get the string that will change the label
            //change the guesserScreen
            //disable this button.
        }
        else{
            chancesLeftCounter--;
            sChancesLeft = Integer.toString(chancesLeftCounter);
            triesLeftScreen.setText(sChancesLeft);
            changeHangmanIcon();  
        }
    }//GEN-LAST:event_AbuttonActionPerformed
    //based on how many tries left, will update the hangman image.
    private void changeHangmanIcon(){            
        switch (chancesLeftCounter){
                case 5: 
                    hangScreen.setIcon(new javax.swing.ImageIcon("../Hangman/hangImg/wrong1.png"));
                    break;
                case 4: 
                    hangScreen.setIcon(new javax.swing.ImageIcon("../Hangman/hangImg/wrong2.png"));
                    break;
                case 3: 
                    hangScreen.setIcon(new javax.swing.ImageIcon("../Hangman/hangImg/wrong3.png"));
                    break;
                case 2: 
                    hangScreen.setIcon(new javax.swing.ImageIcon("../Hangman/hangImg/wrong4.png"));
                    break;
                case 1: 
                    hangScreen.setIcon(new javax.swing.ImageIcon("../Hangman/hangImg/wrong5.png"));
                    break;
                case 0: 
                    //the game is over, the user lost.
                    hangScreen.setIcon(new javax.swing.ImageIcon("../Hangman/hangImg/wrong6.png"));
                    //and then disable all of the buttons.  they will be re-enabled when the user clicks "start game".
                    Abutton.setEnabled(false);
                    Bbutton.setEnabled(false);
                    Cbutton.setEnabled(false);
                    Dbutton.setEnabled(false);
                    Ebutton.setEnabled(false);
                    Fbutton.setEnabled(false);
                    Gbutton.setEnabled(false);
                    Hbutton.setEnabled(false);
                    Ibutton.setEnabled(false);
                    Jbutton.setEnabled(false);
                    Kbutton.setEnabled(false);
                    Lbutton.setEnabled(false);
                    Mbutton.setEnabled(false);
                    Nbutton.setEnabled(false);
                    Obutton.setEnabled(false);
                    Pbutton.setEnabled(false);
                    Qbutton.setEnabled(false);
                    Rbutton.setEnabled(false);
                    Sbutton.setEnabled(false);
                    Tbutton.setEnabled(false);
                    Ubutton.setEnabled(false);
                    Vbutton.setEnabled(false);
                    Wbutton.setEnabled(false);
                    Xbutton.setEnabled(false);
                    Ybutton.setEnabled(false);
                    Zbutton.setEnabled(false);
                    GuessEnterButton.setEnabled(false);
                     GuessWordBox.setEnabled(false);
                    
                    
                    break;
            }
    }
    
    
    public static void main(String args[]) {
         
        /* Set the Nimbus look and feel */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(gameform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(gameform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(gameform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(gameform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new gameform().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Abutton;
    private javax.swing.JButton Bbutton;
    private javax.swing.JButton Cbutton;
    private javax.swing.JButton Dbutton;
    private javax.swing.JComboBox DifficultyCombobox;
    private javax.swing.JLabel DifficultyLabel;
    private javax.swing.JButton Ebutton;
    private javax.swing.JButton Fbutton;
    private javax.swing.JButton Gbutton;
    private javax.swing.JButton GuessEnterButton;
    private javax.swing.JTextField GuessWordBox;
    private javax.swing.JLabel GuessthewordLabel;
    private javax.swing.JButton Hbutton;
    private javax.swing.JButton Ibutton;
    private javax.swing.JButton Jbutton;
    private javax.swing.JButton Kbutton;
    private javax.swing.JButton Lbutton;
    private javax.swing.JButton Mbutton;
    private javax.swing.JButton Nbutton;
    private javax.swing.JButton Obutton;
    private javax.swing.JButton Pbutton;
    private javax.swing.JButton Qbutton;
    private javax.swing.JButton Rbutton;
    private javax.swing.JButton Sbutton;
    private javax.swing.JButton Tbutton;
    private javax.swing.JButton Ubutton;
    private javax.swing.JButton Vbutton;
    private javax.swing.JButton Wbutton;
    private javax.swing.JButton Xbutton;
    private javax.swing.JButton Ybutton;
    private javax.swing.JButton Zbutton;
    private javax.swing.JTextField guesserScreen;
    private javax.swing.JLabel hangScreen;
    private javax.swing.JPanel hangScreenPanel;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton startGameButton;
    private javax.swing.JLabel triesLeftCountLabel;
    private javax.swing.JTextField triesLeftScreen;
    // End of variables declaration//GEN-END:variables

//GLOBAL VARIABLES:
WordShuffle game = new WordShuffle();
boolean correctResponse = false;
int difficulty = 0;
String wordToGuess = "";
String letter;
String underscores = "";
int wordToGuessLength = 0;
int chancesLeftCounter = 6;
String sChancesLeft;


}



